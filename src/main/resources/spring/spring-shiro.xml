<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


	<description>shiro安全框架配置</description>
	<!-- 
	 http://shiro.apache.org/spring.html
	 -->
	<!-- 使用cglib代理 -->
	<aop:aspectj-autoproxy  proxy-target-class="true" />
	
	<!-- shiro域 -->
	<bean id="userRealm"  class="com.lgwork.mvc.shiro.realm.UserRealm" />
	
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="remember_me_pms_zzokk"/>
        <property name="httpOnly" value="true"/>
        <!-- 
        	配置存储rememberMe Cookie的domain为 一级域名
	     -->
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>
	
	<!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <property name="httpOnly" value="true"/>
    </bean>
	
	
	<!-- sessionManager -->
	<bean id="sessionManager"  class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionIdCookie"  ref="sessionIdCookie"   />
	</bean>
	
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	    <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
	    <property name="realm" ref="userRealm"/>
	    <property name="sessionManager"  ref="sessionManager" />
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- For simplest integration, so that all SecurityUtils.* methods work in all cases, -->
	<!-- make the securityManager bean a static singleton.  DO NOT do this in web         -->
	<!-- applications - see the 'Web Applications' section below instead.                 -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
	    <property name="arguments" ref="securityManager"/>
	</bean>


	<!-- 
	shiroFilter
	应该与web.xml中注册的filter名相同
	 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/login.do"/>
	    <property name="successUrl" value="/home.do"/>
	    <property name="unauthorizedUrl" value="/unauthorized.do"/>
	    
	    
	    <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean  -->
	    <!-- defined will be automatically acquired and available via its beanName in chain        -->
	    <!-- definitions, but you can perform instance overrides or name aliases here if you like: -->
	    <!-- <property name="filters">
	        <util:map>
	            <entry key="anAlias" value-ref="someFilter"/>
	        </util:map>
	    </property> -->
	    <property name="filterChainDefinitions">
	        <value>
	            /admin/** = authc, roles[admin]
	            /docs/** = authc, perms[document:read]
	            /** = authc
	        </value>
	    </property>
	</bean>
	
	
	<!-- 启用shiro注解 -->
	<!-- Enable Shiro Annotations for Spring-configured beans.  Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
	


</beans>
